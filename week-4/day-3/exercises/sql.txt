-- -- exercise 1
-- select name from language;
-- select film.title, film.description, language.name as language
-- from film
-- join language
-- on film.language_id = language.language_id;

-- select film.title, film.description, language.name as language
-- from film
-- left join language
-- on film.language_id = language.language_id;

-- create table new_film(
-- id serial primary key,
-- name varchar (50)
-- );
-- insert into new_film(name)
-- values 
-- ('The Shawshank Redemption'),
-- ('The Godfather'),
-- ('The Dark Knight'),
-- ('Forrest Gump'),
-- ('Titanic');
-- create table customer_review(
-- review_id serial primary key,
-- film_id int,
-- language_id int,
-- title varchar (50)not null,
-- score int,
-- review_text varchar (300),
-- last_update TIMESTAMP NOT NULL DEFAULT current_timestamp,
-- foreign key (film_id) references film(film_id),
-- foreign key (language_id) references language(language_id)
-- );
-- insert into customer_review(title,score,review_text)
-- values
-- ('The Shawshank Redemption',9, 'This film is widely considered one of the greatest movies of all time, with powerful themes of hope and redemption. The performances by Tim Robbins and Morgan Freeman are exceptional, and the film''s messages of perseverance and the human spirit have resonated with audiences for decades.'),
-- ('The Dark Knight',7, 'This film is widely regarded as one of the best superhero movies ever made, with a gritty and realistic take on the Batman mythos. Heath Ledger''s performance as the Joker is unforgettable, and the film''s themes of chaos and morality continue to resonate with audiences today.');
-- delete from new_film where name = 'The Dark Knight';
-- insert into new_film(name)
-- values('The Shawshank Redemption');
-- alter table customer_rev/

-- create table customer_review(
-- review_id serial primary key,
-- film_id int,
-- language_id int,
-- title varchar (50)not null,
-- score int,
-- review_text text,
-- last_update TIMESTAMP NOT NULL DEFAULT current_timestamp,
-- constraint fk_film_id
-- foreign key (film_id) references new_film(id) on delete cascade,
-- foreign key (language_id) references language(language_id)
-- );
-- insert into customer_review(film_id, language_id,title,score,review_text)
-- values
-- ((select id from new_film where name = 'The Shawshank Redemption'),(select language_id from language where language_id = 1),'The Shawshank Redemption',9, 'This film is widely considered one of the greatest movies of all time, with powerful themes of hope and redemption. The performances by Tim Robbins and Morgan Freeman are exceptional, and the film''s messages of perseverance and the human spirit have resonated with audiences for decades.'),
-- ((select id from new_film where name = 'The Dark Knight'),(select language_id from language where language_id = 1),'The Dark Knight',7, 'This film is widely regarded as one of the best superhero movies ever made, with a gritty and realistic take on the Batman mythos. Heath Ledger''s performance as the Joker is unforgettable, and the film''s themes of chaos and morality continue to resonate with audiences today.');
-- -- delete from new_film;
-- -- select * from new_film;
-- -- exercise 2
-- update film
-- set language_id = 3 where film_id = 100;
-- select * from film where film_id = 100;
-- -- address_id,store_id. for store_id it is either 1 or 2. for address its manual for a new client

-- -- no extra steps.

-- select count(*) from rental where return_date is null;
-- select rental.*
-- from rental
-- join inventory
-- on rental.inventory_id = inventory.inventory_id
-- join film
-- on inventory.film_id = film.film_id
-- where return_date is null
-- order by film.rental_rate desc
-- limit 30;

-- select film.title, film.film_id
-- from film
-- join film_actor
-- on film.film_id = film_actor.film_id
-- join actor
-- on actor.actor_id = film_actor.actor_id 
-- where description ilike '%sumo wrestler%' 
-- and first_name ilike '%penelope%'
-- and last_name ilike '%monroe%';

-- select *
-- from film
-- where length < 60
-- and rating = 'R'
-- and description ilike '%Documentary%';

-- select film.title, customer.first_name, customer.last_name, film.rental_rate, rental.return_date 
-- from film
-- join inventory
-- on film.film_id = inventory.film_id
-- join rental
-- on rental.inventory_id = inventory.inventory_id
-- join customer
-- on rental.customer_id = customer.customer_id
-- where customer.first_name = 'Matthew' 
-- and customer.last_name = 'Mahan'
-- and film.rental_rate > 4.00
-- and rental.return_date >= '2005-07-28'
-- and rental.return_date <= '2005-08-01';

-- select film.title, customer.first_name, customer.last_name, film.description, film.replacement_cost
-- from film
-- join inventory
-- on film.film_id = inventory.film_id
-- join rental
-- on rental.inventory_id = inventory.inventory_id
-- join customer
-- on rental.customer_id = customer.customer_id
-- where customer.first_name = 'Matthew' 
-- and customer.last_name = 'Mahan'
-- and description ilike '%boat%'
-- order by film.replacement_cost desc limit 1;



