-- create table customer (
-- 	id serial primary key,
-- 	first_name varchar (50) not null,
-- 	last_name varchar (50) not null
-- );
-- create table customer_profile (
-- 	id serial primary key,
-- 	isLoggedIn boolean default false,
-- 	customer_id int references customer(id) on delete cascade
-- );
-- insert into customer(first_name,last_name)
-- values
-- ('John','Doe'),
-- ('Jerome','Lalu'),
-- ('Lea','Rive');
-- insert into customer_profile(customer_id,isLoggedIn)
-- values
-- ((select id from customer where customer.first_name = 'Jerome'),false);

-- select customer.first_name
-- from customer
-- join customer_profile
-- on customer.id = customer_profile.customer_id
-- where customer_profile.isLoggedIn = true;

-- select customer.first_name, customer_profile.isLoggedIn
-- from customer
-- left join customer_profile
-- on customer.id = customer_profile.customer_id;

-- select count(customer_profile.isLoggedIn)
-- from customer
-- left join customer_profile
-- on customer.id = customer_profile.customer_id
-- where isLoggedIn is not true
-- or isLoggedIn is null;


-- create table book(
-- 	book_id serial primary key,
-- 	title varchar (50) not null,
-- 	author varchar (50) not null
-- );
-- insert into book (title,author)
-- values
-- ('Alice In Wonderland','Lewis Carroll'),
-- ('Harry Potter','J.K Rowling'),
-- ('To kill a mockingbird','Harper Lee');
-- select * from book;

-- create table student(
-- 	student_id serial primary key,
-- 	name varchar (100) not null unique,
-- 	age smallint 
-- );
-- insert into student (name,age)
-- values
-- ('John',12),
-- ('Lea',11),
-- ('Patrick',10),
-- ('Bob',14);
-- select * from student;
-- create table library(
-- 	book_fk_id int, 
-- 	student_fk_id int,
-- 	primary key (book_fk_id,student_fk_id),
-- 	foreign key (book_fk_id) references book(book_id) on delete cascade on update cascade,
-- 	foreign key (student_fk_id) references student(student_id)  on delete cascade on update cascade,
-- 	borrowed_date date
-- );
-- insert into library(student_fk_id, book_fk_id, borrowed_date)
-- values
-- ((select student_id from student where name = 'Bob'),(select book_id from book where title = 'To kill a mockingbird'),'2021-03-03' ),
-- ((select student_id from student where name = 'Lea'),(select book_id from book where title = 'Alice In Wonderland'),'2021-05-23' ),
-- ((select student_id from student where name = 'Bob'),(select book_id from book where title = 'Harry Potter'),'2021-08-12' );

-- select * from library;

-- select student.name, book.title, library.borrowed_date
-- from student
-- join library
-- on student.student_id = library.student_fk_id
-- join book
-- on library.book_fk_id = book.book_id;

-- select avg(age)
-- from student
-- join library
-- on student.student_id = library.student_fk_id
-- join book 
-- on library.book_fk_id = book_id
-- where book.title = 'Alice In Wonderland';

-- delete from student where name = 'John';
-- select * from library;   john got deleted


